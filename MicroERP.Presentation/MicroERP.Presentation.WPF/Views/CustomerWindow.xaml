<Controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Class="MicroERP.Presentation.WPF.Views.CustomerWindow"
    x:Name="Window"
    Title="MicroERP"
    Width="640"
    SizeToContent="Height"
    DataContext="{Binding CustomerWindow, Mode=OneWay, Source={StaticResource Locator}}"
    BorderThickness="2"
    BorderBrush="#FF41B1E1"
    WindowTransitionsEnabled="False"
    WindowStartupLocation="CenterScreen">

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CustomerStateGroup">
                <VisualState x:Name="CompanyState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="groupBoxPerson">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="PersonState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="groupBoxCompany">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="InvoiceTabStateGroup">
                <VisualState x:Name="CustomerCreatingState">
                    <Storyboard>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="invoiceTabItem">
                            <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CustomerUpdatingState">
                    <Storyboard>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="invoiceTabItem">
                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="SearchCompaniesElementsGroup">
            	<VisualState x:Name="CompanyComboBoxEmpty">
            		<Storyboard>
            			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(ComboBox.IsDropDownOpen)" Storyboard.TargetName="companiesComboBox">
            				<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
            			</BooleanAnimationUsingKeyFrames>
            		</Storyboard>
            	</VisualState>
                <VisualState x:Name="CompanyComboBoxFilled">
                    <Storyboard>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(ComboBox.IsDropDownOpen)" Storyboard.TargetName="companiesComboBox">
                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <TabControl>
            <TabItem Header="Stammdaten" DataContext="{Binding CustomerDataViewModel, Mode=OneWay}" x:Name="customerTabItem">
                <i:Interaction.Behaviors>
                    <ei:DataStateBehavior Binding="{Binding Company, Mode=OneWay}" Value="{x:Null}" TrueState="PersonState" FalseState="CompanyState"/>
                    <ei:DataStateBehavior Binding="{Binding Person, Mode=OneWay}" Value="{x:Null}" TrueState="CompanyState" FalseState="PersonState"/>
                </i:Interaction.Behaviors>
                
                <StackPanel>
                    <GroupBox x:Name="groupBoxCompany" Header="Firma" DataContext="{Binding Company, Mode=OneWay}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="110" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Name" VerticalAlignment="Center" FontWeight="Bold"/>
                            <TextBlock Text="UID" Grid.Row="1" VerticalAlignment="Center" FontWeight="Bold" />

                            <TextBox Grid.Column="1" Grid.Row="0" Margin="0,0,0,4" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding UID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </GroupBox>

                    <GroupBox x:Name="groupBoxPerson" Header="Person" DataContext="{Binding Person, Mode=OneWay}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="110" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Titel" VerticalAlignment="Center" FontWeight="Bold" />
                            <TextBlock Text="Vorname" Grid.Row="1" VerticalAlignment="Center" FontWeight="Bold" />
                            <TextBlock Text="Nachname" Grid.Row="2" VerticalAlignment="Center" FontWeight="Bold" />
                            <TextBlock Text="Suffix" Grid.Row="3" VerticalAlignment="Center" FontWeight="Bold" />
                            <TextBlock Text="Geburtstag" Grid.Row="4" VerticalAlignment="Center" FontWeight="Bold" />
                            <TextBlock Text="Firma" Grid.Row="5" VerticalAlignment="Center" FontWeight="Bold" />

                            <TextBox Grid.Column="1" Grid.Row="0" Margin="0,0,0,4" Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Grid.Column="1" Grid.Row="1" Margin="0,0,0,4" Text="{Binding FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Grid.Column="1" Grid.Row="2" Margin="0,0,0,4" Text="{Binding LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Grid.Column="1" Grid.Row="3" Margin="0,0,0,4" Text="{Binding Suffix, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <DatePicker Grid.Column="1" Grid.Row="4" Margin="0,0,0,4" SelectedDate="{Binding BirthDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                            <Grid Grid.Column="1" Grid.Row="5" DataContext="{Binding DataContext.CustomerSearchBoxViewModel, ElementName=customerTabItem}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="30" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <ComboBox x:Name="companiesComboBox"
                                          IsEditable="True"
                                          IsDropDownOpen="False"
                                          ItemsSource="{Binding Customers}"
                                          SelectedItem="{Binding SelectedCustomer}"
                                          DisplayMemberPath="DisplayName"
                                          Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Margin="0,0,8,0">
                                	<i:Interaction.Behaviors>
                                		<ei:DataStateBehavior Binding="{Binding Customers}" Value="{x:Null}" TrueState="CompanyComboBoxEmpty" FalseState="CompanyComboBoxFilled"/>
                                	</i:Interaction.Behaviors>
                                    <ComboBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding SearchCustomerCommand, Mode=TwoWay}" />
                                    </ComboBox.InputBindings>
                                </ComboBox>

                                <Button FontFamily="Segoe UI Symbol" Content="&#xE11A;" FontSize="14" Grid.Column="1" HorizontalAlignment="Right" Margin="-4,0,4,0" Padding="7,2" Command="{Binding SearchCustomerCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                                <Button FontFamily="Segoe UI Symbol" Content="&#xE107;" FontSize="14" Grid.Column="2" HorizontalAlignment="Right" Padding="7,2" Command="{Binding ResetCustomerCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                            </Grid>

                        </Grid>
                    </GroupBox>

                    <GroupBox Header="Adresse" DataContext="{Binding Customer, Mode=OneWay}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="110" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Adresse" VerticalAlignment="Center" FontWeight="Bold"/>
                            <TextBlock Text="Rechnungsadresse" VerticalAlignment="Center" Grid.Row="1" FontWeight="Bold" />
                            <TextBlock Text="Lieferadresse" VerticalAlignment="Center" Grid.Row="2" FontWeight="Bold" />

                            <TextBox Grid.Column="1" Margin="0,0,0,4" Text="{Binding Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Grid.Column="1" Margin="0,0,0,4" Grid.Row="1" Text="{Binding BillingAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding ShippingAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </GroupBox>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,4,0,6">
                        <Button Command="{Binding DataContext.CancelCommand, ElementName=Window}" Margin="0,0,6,0">
                            <TextBlock><Run FontFamily="Segoe UI Symbol" Text="&#xE10A;" /><Run Text=" "/><Run Text="ABBRECHEN"/></TextBlock>
                        </Button>
                        <Button Command="{Binding SaveCustomerCommand}" Margin="0,0,6,0">
                            <TextBlock><Run FontFamily="Segoe UI Symbol" Text="&#xE105;" /><Run Text=" "/><Run Text="SPEICHERN"/></TextBlock>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem Header="Rechnungen" x:Name="invoiceTabItem">
                <i:Interaction.Behaviors>
                    <ei:DataStateBehavior Binding="{Binding CustomerDataViewModel.IsCreating, Mode=OneWay}" Value="True" TrueState="CustomerCreatingState" FalseState="CustomerUpdatingState"/>
                </i:Interaction.Behaviors>

                <Grid DataContext="{Binding InvoiceDataViewModel, Mode=OneWay}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <GroupBox Grid.Row="0">
                        <GroupBox.Header>
                            <TextBlock Foreground="White">
                                <Run FontFamily="Segoe UI Symbol" Text="&#xE14C; " />
                                <Run Text="{Binding Items.Count, ElementName=InvoicesListBox, Mode=OneWay}" />
                                <Run Text=" RECHNUNGEN"/>
                            </TextBlock>
                        </GroupBox.Header>

                        <DataGrid x:Name="InvoicesListBox"
                              VerticalAlignment="Stretch"
                              ItemsSource="{Binding Invoices}"
                              SelectedItem="{Binding SelectedInvoice}"
                              AutoGenerateColumns="False"
                              CanUserSortColumns="True"
                              SelectionMode="Single"
                              SelectionUnit="FullRow"
                              CanUserResizeRows="True"
                              IsReadOnly="True"
                              Height="300">

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="#" Binding="{Binding ID}" />
                                <DataGridTextColumn Header="Ausstellung" Binding="{Binding IssueDate, StringFormat=\{0:dd.MM.yy\}}" />
                                <DataGridTextColumn Header="Fälligkeit" Binding="{Binding DueDate, StringFormat=\{0:dd.MM.yy\}}" />
                                <DataGridTextColumn Header="Kommentar" Binding="{Binding Comment}" Width="*" />
                                <DataGridTextColumn Header="Betrag" Binding="{Binding Total, StringFormat=C, ConverterCulture=de-DE}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>

                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,4,0,6">
                        <Button Command="{Binding CreateInvoiceCommand}" Margin="0,0,6,0">
                            <TextBlock>
                                <Run FontFamily="Segoe UI Symbol" Text="&#xE109;" />
                                <Run Text="ERSTELLEN" />
                            </TextBlock>
                        </Button>
                        <Button Command="{Binding ExportInvoiceCommand}" CommandParameter="{Binding SelectedItem, ElementName=InvoicesListBox}" Margin="0,0,4,0">
                            <TextBlock>
                                <Run FontFamily="Segoe UI Symbol" Text="&#xE105;" />
                                <Run Text="EXPORTIEREN" />
                            </TextBlock>
                        </Button>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>

</Controls:MetroWindow>
<Controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:enums="clr-namespace:MicroERP.Business.Domain.Enums;assembly=MicroERP.Business.Domain"
    x:Class="MicroERP.Presentation.WPF.Views.MainWindow"
    x:Name="Window"
    Title="MicroERP"
    Width="900"
    Height="700"
    DataContext="{Binding MainWindow, Mode=OneWay, Source={StaticResource Locator}}"
    BorderThickness="2"
    BorderBrush="#FF41B1E1"
    WindowTransitionsEnabled="False"
    FocusManager.FocusedElement="{Binding ElementName=SearchBox}"
    WindowStartupLocation="CenterScreen">

    <Controls:MetroWindow.WindowCommands>
        <Controls:WindowCommands>
            <Button Command="{Binding RepositoryCommand}">
                <TextBlock Foreground="White">
                    <Run FontFamily="Segoe UI Symbol" Text="&#xE128;" />
                    <Run Text="github.com - MicroERP" />
                </TextBlock>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.WindowCommands>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="SearchCustomersElementsGroup">
                <VisualState x:Name="CustomerComboBoxEmpty">
                    <Storyboard>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(ComboBox.IsDropDownOpen)" Storyboard.TargetName="customersComboBox">
                            <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CustomerComboBoxFilled">
                    <Storyboard>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(ComboBox.IsDropDownOpen)" Storyboard.TargetName="customersComboBox">
                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <TabControl>
            <TabItem Header="Kunden" DataContext="{Binding SearchCustomersViewModel}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <GroupBox Grid.Row="0">
                        <GroupBox.Header>
                            <TextBlock Foreground="White">
                                <Run FontFamily="Segoe UI Symbol" Text="&#xE16E;" />
                                <Run Text=" FILTER"/>
                            </TextBlock>
                        </GroupBox.Header>

                        <Grid Margin="10,2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="75"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="44"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Suchbegriff" VerticalAlignment="Center" FontWeight="Bold"/>
                            <TextBox x:Name="SearchBox" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <ei:CallMethodAction MethodName="SelectAll"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Return" Command="{Binding SearchCustomersCommand, Mode=TwoWay}" />
                                </TextBox.InputBindings>
                            </TextBox>
                            <Button Grid.Column="2" FontFamily="Segoe UI Symbol" Content="&#xE11A;" FontSize="14" HorizontalAlignment="Right" Padding="7,2" Command="{Binding SearchCustomersCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                        </Grid>
                    </GroupBox>

                    <GroupBox Grid.Row="1">
                        <GroupBox.Header>
                            <TextBlock Foreground="White">
                                <Run FontFamily="Segoe UI Symbol" Text="&#xE125; " />
                                <Run Text="{Binding Items.Count, ElementName=CustomersListBox, Mode=OneWay}" />
                                <Run Text=" TREFFER"/>
                            </TextBlock>
                        </GroupBox.Header>

                        <ListBox x:Name="CustomersListBox" ItemsSource="{Binding Customers}" SelectedItem="{Binding SelectedCustomer}" BorderBrush="Transparent" Margin="-5.2,0">
                            <ListBox.InputBindings>
                                <KeyBinding Key="Return" Command="{Binding DataContext.CustomerCommandsViewModel.EditCustomerCommand, ElementName=Window}" CommandParameter="{Binding SelectedItem, ElementName=CustomersListBox}" />
                            </ListBox.InputBindings>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontFamily="Segoe UI Symbol">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:CustomerType.Company}">
                                                            <Setter Property="Text" Value="&#xE12B;" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="{x:Static enums:CustomerType.Person}">
                                                            <Setter Property="Text" Value="&#xE13D;" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Text="{Binding DisplayName}" Margin="6,0,0,0" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </GroupBox>

                    <StackPanel DataContext="{Binding DataContext.CustomerCommandsViewModel, ElementName=Window}" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,4,0,6">
                        <Button ContextMenuService.IsEnabled="False" Margin="0,0,6,0" Click="OpenContextMenu">
                            <Button.Content>
                                <TextBlock>
                                    <Run FontFamily="Segoe UI Symbol" Text="&#xE109;" />
                                    <Run Text="ERSTELLEN"/>
                                </TextBlock>
                            </Button.Content>
                            <Button.ContextMenu>
                                <ContextMenu >
                                    <MenuItem Header="Firma hinzufügen" Command="{Binding CreateCustomerCommand}" CommandParameter="{x:Static enums:CustomerType.Company}">
                                        <MenuItem.Icon>
                                            <TextBlock FontFamily="Segoe UI Symbol" Text=" &#xE12B;" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Person hinzufügen" Command="{Binding CreateCustomerCommand}" CommandParameter="{x:Static enums:CustomerType.Person}">
                                        <MenuItem.Icon>
                                            <TextBlock FontFamily="Segoe UI Symbol" Text=" &#xE13D;" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                        <Button Command="{Binding EditCustomerCommand}" CommandParameter="{Binding SelectedItem, ElementName=CustomersListBox}" Margin="0,0,6,0">
                            <TextBlock>
                                <Run FontFamily="Segoe UI Symbol" Text="&#xE104;" />
                                <Run Text="BEARBEITEN" />
                            </TextBlock>
                        </Button>
                        <Button Command="{Binding DeleteCustomerCommand}" CommandParameter="{Binding SelectedItem, ElementName=CustomersListBox}" Margin="0,0,4,0">
                            <TextBlock>
                                <Run FontFamily="Segoe UI Symbol" Text="&#xE106;" />
                                <Run Text="LÖSCHEN" />
                            </TextBlock>
                        </Button>
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem Header="Rechnungen" DataContext="{Binding SearchInvoicesViewModel}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <GroupBox Grid.Row="0">
                        <GroupBox.Header>
                            <TextBlock Foreground="White">
                                <Run FontFamily="Segoe UI Symbol" Text="&#xE16E;" />
                                <Run Text=" FILTER" />
                            </TextBlock>
                        </GroupBox.Header>

                        <Grid Margin="10,2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Anfangs-Datum" VerticalAlignment="Center" FontWeight="Bold" Margin="0,0,10,0" />
                            <TextBlock Grid.Row="0" Grid.Column="2" Text="End-Datum" VerticalAlignment="Center" FontWeight="Bold" Margin="10,0" />
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Min. Betrag" VerticalAlignment="Center" FontWeight="Bold" Margin="0,0,10,0" />
                            <TextBlock Grid.Row="1" Grid.Column="2" Text="Max. Betrag" VerticalAlignment="Center" FontWeight="Bold" Margin="10,0" />
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Kunde" VerticalAlignment="Center" FontWeight="Bold" />

                            <DatePicker Grid.Row="0" Grid.Column="1" Margin="0,5" SelectedDate="{Binding MinDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <DatePicker Grid.Row="0" Grid.Column="3" Margin="0,5" SelectedDate="{Binding MaxDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Controls:NumericUpDown Grid.Row="1" Grid.Column="1" Margin="0,5" Value="{Binding MinTotal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Controls:NumericUpDown Grid.Row="1" Grid.Column="3" Margin="0,5" Value="{Binding MaxTotal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                            <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ComboBox x:Name="customersComboBox"
                                          DataContext="{Binding CustomerSearchBoxViewModel}"
                                          IsEditable="True"
                                          IsDropDownOpen="False"
                                          ItemsSource="{Binding Customers}"
                                          SelectedItem="{Binding SelectedCustomer}"
                                          DisplayMemberPath="DisplayName"
                                          Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Margin="0,0,8,0">
                                    <i:Interaction.Behaviors>
                                        <ei:DataStateBehavior Binding="{Binding Customers}" Value="{x:Null}" TrueState="CustomerComboBoxEmpty" FalseState="CustomerComboBoxFilled"/>
                                    </i:Interaction.Behaviors>
                                    <ComboBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding SearchCustomerCommand, Mode=TwoWay}" />
                                    </ComboBox.InputBindings>
                                </ComboBox>

                                <Button Grid.Row="0" Grid.Column="1" FontFamily="Segoe UI Symbol" Content="&#xE11A;" FontSize="14" HorizontalAlignment="Right" Padding="7,2" Command="{Binding SearchInvoicesCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                            </Grid>

                        </Grid>
                    </GroupBox>

                    <GroupBox Grid.Row="1">
                        <GroupBox.Header>
                            <TextBlock Foreground="White">
                                <Run FontFamily="Segoe UI Symbol" Text="&#xE14C; " />
                                <Run Text="{Binding Items.Count, ElementName=InvoicesListBox, Mode=OneWay}" />
                                <Run Text=" TREFFER" />
                            </TextBlock>
                        </GroupBox.Header>

                        <ListView x:Name="InvoicesListBox" ItemsSource="{Binding Invoices}" SelectedItem="{Binding SelectedInvoice}" BorderBrush="Transparent" Margin="-5.2,0">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Nr." Width="60">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock TextDecorations="Underline" Foreground="Blue" Cursor="Hand">
                                                    <Run Text="#" />
                                                    <Run Text="{Binding ID, Mode=OneWay}" />
                                                </TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Kunde" DisplayMemberBinding="{Binding DisplayName}" Width="90" />
                                    <GridViewColumn Header="Ausgestellt am" DisplayMemberBinding="{Binding IssueDate, StringFormat=\{0:dd.MM.yy\}}" Width="110" />
                                    <GridViewColumn Header="Fällig am" DisplayMemberBinding="{Binding DueDate, StringFormat=\{0:dd.MM.yy\}}" Width="70" />
                                    <GridViewColumn Header="Kommentar" DisplayMemberBinding="{Binding Comment}" Width="190" />
                                    <GridViewColumn Header="Summe" DisplayMemberBinding="{Binding Total, StringFormat=C, ConverterCulture=de-DE}" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </GroupBox>

                    <StackPanel DataContext="{Binding DataContext.InvoiceCommandsViewModel, ElementName=Window}" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,4,0,6">
                        <Button Command="{Binding CreateInvoiceCommand}" Margin="0,0,6,0">
                            <TextBlock>
                                <Run FontFamily="Segoe UI Symbol" Text="&#xE109;" />
                                <Run Text="ERSTELLEN" />
                            </TextBlock>
                        </Button>
                        <Button Command="{Binding ExportInvoiceCommand}" CommandParameter="{Binding SelectedItem, ElementName=InvoicesListBox}" Margin="0,0,4,0">
                            <TextBlock>
                                <Run FontFamily="Segoe UI Symbol" Text="&#xE105;" />
                                <Run Text="EXPORTIEREN" />
                            </TextBlock>
                        </Button>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Controls:MetroWindow>